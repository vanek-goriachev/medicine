linters:
  enable-all: true
  disable:
    - gofmt # [replaced by goimports] checks whether code was gofmt-ed
    - gofumpt # [replaced by goimports, gofumports is not available yet] checks whether code was gofumpt-ed
    - goheader # checks is file header matches to pattern
    - gomodguard # [use more powerful depguard] allow and block lists linter for direct Go module dependencies
    - grouper # analyzes expression groups
    #    - importas # enforces consistent import aliases (have to hardcode aliases mapping)
    - makezero # finds slice declarations with non-zero initial length
    - tenv # [deprecated, replaced by usetesting] detects using os.Setenv instead of t.Setenv since Go1.17
    - varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope

# All available settings of specific linters.
linters-settings:
  copyloopvar:
    check-alias: true

  cyclop:
    # The maximal code complexity to report.
    # Default: 10
    max-complexity: 10

  decorder:
    # If true, order of declarations is not checked at all.
    # Default: true (disabled)
    disable-dec-order-check: false


  depguard:
    rules:
      main:
        list-mode: strict
        files:
          - $all
          - "!$test"
        allow:
          - $gostd
          - template # Name of the root package
          - "github.com/google/uuid"
      tests:
        list-mode: strict
        files:
          - $test
        allow:
          - $gostd
          - template # Name of the root package
          - "github.com/stretchr/testify"
          - "github.com/jackc/pgx/v5"

  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.
    # Such cases aren't reported by default.
    # Default: false
    check-blank: true


  forbidigo:
    forbid:
      - p: "^(fmt\\.Print(|f|ln)|print|println)$"
        msg: Should not use default print functions - use pkg.Terminal.Stdout().Write() instead

  fatcontext:
    # Check for potential fat contexts in struct pointers.
    # May generate false positives.
    # Default: false
    check-struct-pointers: true

  funlen:
    # Ignore comments when counting lines.
    # Default false
    ignore-comments: true

  gci:
    # Section configuration to compare against.
    # Section names are case-insensitive and may contain parameters in ().
    # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
    # If `custom-order` is `true`, it follows the order of `sections` option.
    # Default: ["standard", "default"]
    sections:
      - standard                       # Standard section: captures all standard packages.
      - default                        # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/org/project) # Custom section: groups all imports with the specified Prefix.
      - blank                          # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      - dot                            # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
      - alias                          # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
      - localmodule                    # Local module section: contains all local packages. This section is not present unless explicitly enabled.

    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true

  ginkgolinter:
    # Trigger warning for ginkgo focus containers like `FDescribe`, `FContext`, `FWhen` or `FIt`
    # Default: false
    forbid-focus-container: true

    # Force using `Expect` with `To`, `ToNot` or `NotTo`.
    # Reject using `Expect` with `Should` or `ShouldNot`.
    # Default: false
    force-expect-to: true

    # Best effort validation of async intervals (timeout and polling).
    # Ignored the suppress-async-assertion is true.
    # Default: false
    validate-async-intervals: true

    # Trigger a warning for variable assignments in ginkgo containers like `Describe`, `Context` and `When`, instead of in `BeforeEach()`.
    # Default: false
    forbid-spec-pollution: true

    # Force using the Succeed matcher for error functions, and the HaveOccurred matcher for non-function error values.
    # Default: false
    force-succeed: true

  gochecksumtype:
    # Presence of `default` case in switch statements satisfies exhaustiveness, if all members are not listed.
    # Default: true
    default-signifies-exhaustive: false
    # Include shared interfaces in the exhaustiviness check.
    # Default: false
    include-shared-interfaces: true

  gocognit:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20)
    min-complexity: 10

  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 2
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    min-occurrences: 2
    # Search also for duplicated numbers.
    # Default: false
    numbers: true
    # Ignore when constant is not used as function argument.
    # Default: true
    ignore-calls: false

  gocritic:
    # Enable all checks.
    # Default: false
    enable-all: true
    # Which checks should be disabled; can't be combined with 'enabled-checks'.
    # Default: []
    disabled-checks: [ ]

    # Settings passed to gocritic.
    # The settings key is the name of a supported gocritic checker.
    # The list of supported checkers can be find in https://go-critic.com/overview.
    settings:
      # Must be valid enabled check name.
      captLocal:
        # Whether to restrict checker to params only.
        # Default: true
        paramsOnly: false
      elseif:
        # Whether to skip balanced if-else pairs.
        # Default: true
        skipBalanced: false
      underef:
        # Whether to skip (*x).method() calls where x is a pointer receiver.
        # Default: true
        skipRecvDeref: false
      unnamedResult:
        # Whether to check exported functions.
        # Default: false
        checkExported: true

  gocyclo:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20)
    min-complexity: 10

  godot:
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    exclude:
      # Exclude todo and fixme comments.
      - "^fixme:"
      - "^todo:"
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: true

  godox:
    # Report any comments starting with keywords, this is useful for TODO or FIXME comments that
    # might be left in the code accidentally and should be resolved before merging.
    # Default: ["TODO", "BUG", "FIXME"]
    keywords:
      - TODO
      - BUG
      - FIXME
      - NOTE
      - OPTIMIZE # marks code that should be optimized before merging
      - HACK # marks hack-around that should be removed before merging

  govet:
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Default: []
    disable: [ ]

    # Settings per analyzer.
    settings:
      # Analyzer name, run `go tool vet help` to see all analyzers.
      shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        strict: true

  iface:
    # List of analyzers.
    # Default: ["identical"]
    enable:
      - identical # Identifies interfaces in the same package that have identical method sets.
      - opaque # Identifies functions that return interfaces, but the actual returned value is always a single concrete implementation.

  interfacebloat:
    # The maximum number of methods allowed for an interface.
    # Default: 10
    max: 5

  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    # Default is to use a neutral variety of English.
    locale: US

  nilnil:
    # In addition, detect opposite situation (simultaneous return of non-nil error and valid value).
    # Default: false
    detect-opposite: true

  nolintlint:
    # Enable to require an explanation of nonzero length after each nolint directive.
    # Default: false
    require-explanation: true
    # Enable to require nolint directives to mention the specific linter being suppressed.
    # Default: false
    require-specific: true

  predeclared:
    # Include method names and field names (i.e., qualified names) in checks.
    # Default: false
    q: true

  promlinter:
    # Promlinter cannot infer all metrics name in static analysis.
    # Enable strict mode will also include the errors caused by failing to parse the args.
    # Default: false
    strict: true

  reassign:
    # Patterns for global variable names that are checked for reassignment.
    # See https://github.com/curioswitch/go-reassign#usage
    # Default: ["EOF", "Err.*"]
    patterns:
      - ".*"

  revive:
    # Enable all available rules.
    # Default: false
    enable-all-rules: true
    rules:
      # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#add-constant
      - name: add-constant
        severity: warning
        disabled: false
        exclude: [ "" ]
        arguments:
          - allowStrs: '"","0"'
            allowInts: "0,1"
            allowFloats: "0.0,0.,1.0,1."
      # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#line-length-limit
      - name: line-length-limit
        severity: warning
        disabled: false
        exclude: [ "" ]
        arguments: [ 120 ]
      # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#import-alias-naming
      - name: import-alias-naming
        disabled: true
      # https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#var-naming
      - name: var-naming
        severity: warning
        disabled: false
        arguments: [[], [], [skipPackageNameChecks: true]]

  sloglint:
    # Enforce using attributes only (overrides no-mixed-args, incompatible with kv-only).
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#attributes-only
    # Default: false
    attr-only: true
    # Enforce not using global loggers.
    # Values:
    # - "": disabled
    # - "all": report all global loggers
    # - "default": report only the default slog logger
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-global
    # Default: ""
    no-global: "all"
    # Enforce using methods that accept a context.
    # Values:
    # - "": disabled
    # - "all": report all contextless calls
    # - "scope": report only if a context exists in the scope of the outermost function
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#context-only
    # Default: ""
    context: "all"
    # Enforce using static values for log messages.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#static-messages
    # Default: false
    static-msg: true
    # Enforce using constants instead of raw keys.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#no-raw-keys
    # Default: false
    no-raw-keys: true
    # Enforce a single key naming convention.
    # Values: snake, kebab, camel, pascal
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#key-naming-convention
    # Default: ""
    key-naming-case: snake
    # Enforce putting arguments on separate lines.
    # https://github.com/go-simpler/sloglint?tab=readme-ov-file#arguments-on-separate-lines
    # Default: false
    args-on-sep-lines: true

  spancheck:
    # Checks to enable.
    # Options include:
    # - `end`: check that `span.End()` is called
    # - `record-error`: check that `span.RecordError(err)` is called when an error is returned
    # - `set-status`: check that `span.SetStatus(codes.Error, msg)` is called when an error is returned
    # Default: ["end"]
    checks:
      - end
      - record-error
      - set-status

  stylecheck:
    # https://staticcheck.dev/docs/configuration/options/#http_status_code_whitelist
    # Default: ["200", "400", "404", "500"]
    http-status-code-whitelist: [ ]
    checks:
      - "all"
      - "-ST1000" # Incorrect or missing package comment
      - "-ST1003" # Poorly chosen identifier

  tagliatelle:
    # Checks the struct tag name case.
    case:
      # Defines the association between tag name and case.
      # Any struct tag name can be used.
      # Supported string cases:
      # - `camel`
      # - `pascal`
      # - `kebab`
      # - `snake`
      # - `upperSnake`
      # - `goCamel`
      # - `goPascal`
      # - `goKebab`
      # - `goSnake`
      # - `upper`
      # - `lower`
      # - `header`
      rules:
        json: snake
        yaml: snake

      # Uses the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: true

  testifylint:
    # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).
    # Default: false
    enable-all: true

  testpackage:
    # Regexp pattern to skip files.
    # Default: "(export|internal)_test\\.go"
    skip-regexp: (export|internal)_test\.go
    # List of packages that don't end with _test that tests are allowed to be in.
    # Default: "main"
    allow-packages: [ ]

  usestdlibvars:
    # Suggest the use of time.Month.String().
    # Default: false
    time-month: true
    # Suggest the use of time.Layout.
    # Default: false
    time-layout: true
    # Suggest the use of crypto.Hash.String().
    # Default: false
    crypto-hash: true
    # Suggest the use of rpc.DefaultXXPath.
    # Default: false
    default-rpc-path: true
    # Suggest the use of sql.LevelXX.String().
    # Default: false
    sql-isolation-level: true
    # Suggest the use of tls.SignatureScheme.String().
    # Default: false
    tls-signature-scheme: true
    # Suggest the use of constant.Kind.String().
    # Default: false
    constant-kind: true

  usetesting:
    # Enable/disable `os.TempDir()` detections.
    # Default: false
    os-temp-dir: true

  unconvert:
    # Remove conversions that force intermediate rounding.
    # Default: false
    fast-math: true
    # Be more conservative (experimental).
    # Default: false
    safe: true

  unparam:
    # Inspect exported functions.
    #
    # Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    #
    # Default: false
    check-exported: true

  unused:
    # Mark all exported fields as used.
    # default: true
    exported-fields-are-used: false
    # Mark all local variables as used.
    # default: true
    local-variables-are-used: false

  whitespace:
    # Enforces newlines (or comments) after every multi-line if statement.
    # Default: false
    multi-if: true
    # Enforces newlines (or comments) after every multi-line function signature.
    # Default: false
    multi-func: true

  wsl:
    # Allows assignments to be cuddled with variables used in calls on
    # line above and calls to be cuddled with assignments of variables
    # used in call on line above.
    # https://github.com/bombsimon/wsl/blob/HEAD/doc/configuration.md#allow-assign-and-call
    # Default: true
    allow-assign-and-call: false

    # Allow multiple comments in the beginning of a block separated with newline.
    # https://github.com/bombsimon/wsl/blob/HEAD/doc/configuration.md#allow-separated-leading-comment
    # Default: false
    allow-separated-leading-comment: true

    # Allow multiple var/declaration statements to be cuddled.
    # https://github.com/bombsimon/wsl/blob/HEAD/doc/configuration.md#allow-cuddle-declarations
    # Default: false
    allow-cuddle-declarations: true


# Output configuration options
output:
  # Show statistics per linter.
  # Default: false
  show-stats: true


# Options for analysis running.
run:
  # Timeout for analysis, e.g. 30s, 5m, 5m30s.
  # If the value is lower or equal to 0, the timeout is disabled.
  # Default: 1m
  timeout: 5m

  relative-path-mode: gomod
